buildscript {
    repositories {
        jcenter()
        maven { url = "https://maven.minecraftforge.net" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

version = "1.0"
group = "org.rainyville.serverguard" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ServerGuard"
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.12-14.21.1.2443"
    runDir = "eclipse"
    mappings = "stable_39"

    replace '@FINGERPRINT@', project.findProperty('signSHA1')
    replaceIn "ServerGuard.java"
    replaceIn "ProtectGuard.java"
}

configurations {
    shade
    compile.extendsFrom(shade)
}

dependencies {
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'
    implementation('net.dv8tion:JDA:4.2.1_265') { exclude module: 'opus-java' }
    shadow('net.dv8tion:JDA:4.2.1_265') { exclude module: 'opus-java' }
}

shadowJar {
    classifier ''

    relocate 'net.dv8tion.jda', 'org.rainyville.jda'
    relocate 'org.slf4j', 'org.rainyville.slf4j'
    relocate 'com.iwebpp.crypto', 'org.rainyville.crypto'
    relocate 'com.fasterxml.jackson.annotation', 'org.rainyville.jackson.annotation'
    relocate 'com.fasterxml.jackson.core', 'org.rainyville.jackson.core'
    relocate 'com.fasterxml.jackson.databind', 'org.rainyville.jackson.databind'
    relocate 'com.neovisionaries.ws.client', 'org.rainyville.client'
    relocate 'gnu.trove', 'org.rainyville.trove'
    relocate 'javax.annotation', 'org.rainyville.javax.annotation'
    relocate 'okhttp3', 'org.rainyville.okhttp3'
    relocate 'okio', 'org.rainyville.okio'
    relocate 'org.apache.commons.collections4', 'org.rainyville.collections4'
    relocate 'org.intellij.lang.annotations', 'org.rainyville.intellij.lang.annotations'
    relocate 'org.jetbrains.annotations', 'org.rainyville.jetbrains.annotations'
}

reobf {
    shadowJar {}
}

tasks.reobfShadowJar.mustRunAfter shadowJar

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, that's not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')

    inputFile = new File("build/libs/${archivesBaseName}-${version}.jar")
    outputFile = new File("build/libs/${archivesBaseName}-${version}.jar")
}

build {
    dependsOn reobfShadowJar
    dependsOn signJar
}

task srcJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    archiveName = "${baseName}-${version}-sources.${extension}"
}

task deobfJar(type: Jar) {
    classifier = "deobf"
    from sourceSets.main.output
    archiveName = "${baseName}-${version}-deobf.${extension}"
}

artifacts {
    archives deobfJar
    archives srcJar
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact deobfJar

            version = project.minecraft.version + '-' + project.version
        }
    }

    repositories {
        maven {
            credentials {
                username = project.hasProperty('username') ? project.property('username') : null
                password = project.hasProperty('password') ? project.property('password') : null
            }

            name = 'Rainyville'
            url = 'https://maven.rainyville.org/'
        }
    }
}